#hexGrid {
  flex-wrap: wrap;
  width: 90%;
  margin: 0 auto;
  overflow: hidden;
  font-family: $regular_font-family;
  font-weight: $regular_font-weight;
  font-size: 14px;
  list-style-type: none;
  @extend %flexbox;

  &:hover {
    .hex {
      &:not(:hover) {
        // filter: blur(2px);
      }
    }
  }
}

.hex {
  position: relative;
  visibility: hidden;
  outline: 1px solid transparent;

  &::after {
    content: '';
    display: block;
    padding-bottom: 86.602%;
    // /* =  100 / tan(60) * 1.5 */
  }

  img {
    left: -100%;
    right: -100%;
    width: auto;
    height: 100%;
    margin: 0 auto;
    @include transform(rotate3d(0, 0, 0, 0deg));
    @include transition(transform 0.2s linear);
  }

  &In {
    position: absolute;
    width: 96%;
    padding-bottom: 110.851%;
    /* =  width / sin(60) */
    margin: 0 2%;
    overflow: hidden;
    visibility: hidden;
    outline: 1px solid transparent;
    /* fix for jagged edges in FF on hover transition */
    @include transform(rotate3d(0, 0, 1, -60deg) skewY(30deg));

    * {
      position: absolute;
      visibility: visible;
      outline: 1px solid transparent;
      /* fix for jagged edges in FF on hover transition */
    }
  }

  &Link {
    display: block;
    width: 100%;
    height: 100%;
    text-align: center;
    color: $white;
    overflow: hidden;
    @include transform(skewY(-30deg) rotate3d(0, 0, 1, 60deg));

    &::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      mix-blend-mode: hard-light;
      background-repeat: no-repeat;
      background-position: center center;
      @include background-size(60px);
      @include transition(background 0.1s linear);
    }


    &:hover {
      &::before {
        z-index: 1;
        background-color: rgba($color: $client-secondary-color, $alpha: .8);
        background-image: url(../images/bc-thumb.png);

      }

      img {
        @include transform(scale(1.2));
      }
    }
  }
}




/*** HEX CONTENT **********************************************************************/
.hex img {}



/*** HEXAGON SIZING AND EVEN ROW INDENTATION *****************************************************************/
@media (min-width:1201px) {

  /* <- 5-4  hexagons per row */
  #hexGrid {
    padding-bottom: 4.4%
  }

  .hex {
    width: 18%;
    /* = 100 / 5 */
  }

  .hex:nth-child(10n+6) {
    /* first hexagon of even rows */
    margin-left: 9%;
    /* = width of .hex / 2  to indent even rows */
  }
}

@media (max-width: 1200px) and (min-width:901px) {

  /* <- 4-3  hexagons per row */
  #hexGrid {
    padding-bottom: 5.5%
  }

  .hex {
    width: 25%;
    /* = 100 / 4 */
  }

  .hex:nth-child(7n+5) {
    /* first hexagon of even rows */
    margin-left: 12.5%;
    /* = width of .hex / 2  to indent even rows */
  }
}

@media (max-width: 900px) and (min-width:601px) {

  /* <- 3-2  hexagons per row */
  #hexGrid {
    padding-bottom: 7.4%
  }

  .hex {
    width: 33.333%;
    /* = 100 / 3 */
  }

  .hex:nth-child(5n+4) {
    /* first hexagon of even rows */
    margin-left: 16.666%;
    /* = width of .hex / 2  to indent even rows */
  }
}

@media (max-width: 600px) {

  /* <- 2-1  hexagons per row */
  #hexGrid {
    padding-bottom: 11.2%
  }

  .hex {
    width: 40%;
    /* = 100 / 3 */
  }

  .hex:nth-child(4n+3) {
    /* first hexagon of even rows */

    margin-left: 20%;
    /* = width of .hex / 2  to indent even rows */
  }
}

@media (max-width: 400px) {
  #hexGrid {
    font-size: 13px;
  }
}

.hexFront {
  fill: white;
}

.hexBack {
  fill: $client-primary-color;
}